// 0. Documentation: Include purpose of the software, the authors, the date, and any copyright information.
//    Purpose:          To calculate the area of square shaped rooms
//    Author:           Ricardo Morocz
//    Date:             06/22/2017
//    Acknowledgement:  Work based on the code developed by Ramesh Yerraballi & Jon Valvano as part of the UT Austin's 
//                      Embedded Systems online course section 5

// 1. Pre-Processor Directives: Use preprocessor directive #include to connect this software with other modules
#include <stdio.h> // Diamond braces are used to include system libraries. In this case "Standard I/O"
#include "uart.h"  // Quates are used to include user libraries. In this case "uart module"

// 2. Global Declaration: Include global variables and function prototypes for functions defined in this module

//    Global Variables
unsigned long error;

//    Function Prototypes: Compiler aid for "type checking"
unsigned long Calc_Area(unsigned long s); // Expects a unsigned long and returns an unsigned long
void Initialize (void);

// 3. Functions/Subroutines:

//    MAIN: Mandatory routine for the C program to be executable
int main(void) {
  unsigned long side; // Room wall in meters. unsigned = no negative, long = 32bit number, side = variable name
  unsigned long area; // Area of the room in squared meters

  UART_Init();        // Initialize the uart
  Initialize();       // Initialize global variables
  
  printf("This program calculates the area of a square room\n");
  
  while(side != 0){
    printf("Give room side (zero to quit): ");
    scanf("%ld", &side);           // Get input from user
    area = Calc_Area(side);        // Area calculation function
    if(area != 0){
    printf("Area of the room with side of %ld m is %ld sqr m\n",side,area);
    }else{
      printf("\nRoom side cannot exceed 25m\n");
    }
  } 
}

// Initialize: Function that initializes our global variables
// Inputs: none
// Outputs: none
// Notes:
void Initialize(void){
  error = 0;
}

// Calc_Area: Function that calculates area of a square room based on the length of it's side
// Input: side of a room (unsigned long)
// Output: area of the room (unsigned long)
// Notes:
unsigned long Calc_Area(unsigned long s){
  unsigned long result; // Contains result of the area calculation
  if(s<=25){
    results = s*s;        // Area calculation
  }else{
    result=0;             //error: Rooms cannot have sides larger than 25m
    error = error+1;      //error counter
}
